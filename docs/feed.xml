<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>tag:ajitek.net,2024:blog</id>
  <title>aji's Blog</title>
  <updated>2024-02-03T07:58:22.585823134Z</updated>
  <link rel="self" href="https://aji.github.io/blog/feed.xml" />
  <link href="https://aji.github.io/blog" />
  <icon>https://aji.github.io/blog/images/icon.png</icon>
  <author>
    <name>aji</name>
  </author>
  
    <entry>
      <id>tag:ajitek.net,2024:blog/posts/2024-01-29-reader-mode-it-just-works.md</id>
      <title>Reader Mode: It Just Works</title>
      <link rel="alternate" type="text/html" href="https://aji.github.io/blog/posts/2024-01-29-reader-mode-it-just-works.html" />
      <published>2024-01-29T12:00:00Z</published>
      <updated>2024-02-03T07:58:18Z</updated>
      <rights>
        This work (c) 2024 by Alex Iadicicco is licensed under CC BY-NC-SA 4.0.
        To view a copy of this license, visit http://creativecommons.org/licenses/by-nc-sa/4.0/
      </rights>
      
        <summary>And maybe that's fine</summary>
      
      <content type="xhtml" xml:lang="en" xml:base="https://aji.github.io/blog">
        <div xmlns="http://www.w3.org/1999/xhtml">
          
            <img src="https://aji.github.io/blog/images/2024-01-29-reader-mode-it-just-works.png" />
          
          <p>I’m the kind of internet user for whom the <a href="https://support.mozilla.org/en-US/kb/firefox-reader-view-clutter-free-web-pages">Firefox Reader View
feature</a> is only occasionally useful. Most mainstream browsers have
something like it these days. I’m sure there are people out there who can’t
imagine using the internet without it. For me, it’s a lot like having a
unique screwdriver that’s a better choice for some jobs than resorting to a
suitably-sized flathead and hoping for the best: most of the time you can’t
use it, but when you can, you’re really glad to have it.</p>
<p>I’ve often wondered how exactly this feature works. This is partially out of
curiosity. Sometimes it gets things slightly wrong, which, sadly, makes me
reluctant to trust it. Its shortcomings suggest something really tricky going
on under the hood. I can’t help but wonder where in the pinball machine of
<code>&lt;div&gt;</code> tags and CSS class names <em>that</em> particular bit of authorial intent got
lost. Sometimes you notice the little Reader View icon in the address bar for
pages that can’t plausibly look decent that way, or sometimes it’s missing from
pages that by all accounts <em>should</em> have it. But in addition to rubbernecking
and taking cheap shots at a brave attempt to address a difficult problem,
there’s also a more cooperative motivation: how can I structure the stuff I put
online in a way that will reliably look good in Reader View, and reader modes
in general?</p>
<p>This is, sadly, a poorly-documented topic. Resources consist mainly of
<a href="https://stackoverflow.com/questions/47822691/how-do-you-create-a-web-page-for-reader-mode">Stack</a> <a href="https://stackoverflow.com/questions/30661650/how-does-firefox-reader-view-operate">Overflow</a> <a href="https://stackoverflow.com/questions/30730300/optimize-website-to-show-reader-view-in-firefox">questions</a>, questions on the <a href="https://webmasters.stackexchange.com/questions/83058/how-do-i-make-my-site-compatible-with-firefoxs-reader-view-feature">Webmasters
Stack Exchange</a>, threads on <a href="https://support.mozilla.org/en-US/questions/1067528">Mozilla’s</a> <a href="https://support.mozilla.org/en-US/questions/1140969">support
forums</a>, now-deleted <a href="https://web.archive.org/web/20200719050912/http://zumguy.com/enabling-reading-mode-on-your-website/">blog posts</a>, etc. all of which link to
each other. The advice seems to boil down to “It applies a bunch of heuristics
that work pretty well if your HTML is good.”</p>
<h2 id="why-isnt-it-standardized-yet">Why isn’t it standardized yet?</h2>
<p>After some digging I found <a href="https://www.ctrl.blog/entry/browser-reading-mode-parsers.html">this excellent series of 4 articles by Daniel
Aleksandersen from 2018</a> about features like Reader View that
discusses their history, the failed attempts at standardization, an overview of
how these features work and how they differ across implementations, and a plea
to finally standardize the dang thing. The fact that Daniel is writing from
2018 is a little disheartening. A lot of what he writes still feels very
relatable. It’s a relatively simple problem, at least compared to what’s
typical for the web, so how could we not have made any progress on it in almost
6 years?</p>
<p>An uncharitable reading of the situation might conclude that Reader View and
features like it are useless, something completely forgotten by browser vendors
and content authors alike, the kind of problem that standardization alone can’t
solve. But a quick scan of the <a href="https://github.com/mozilla/readability/issues">issues</a> and <a href="https://github.com/mozilla/readability/pulls">pull
requests</a> for Readability.js (the tool used for implementing the
Firefox Reader View) suggest that there are at least a <em>few</em> people who want
the feature to be good, and some of them even work at Mozilla. From another
perspective, the scattered and wishy-washy advice for how to cooperate with
Reader View is a testament to the feature’s overall reliability, an indication
that people are content to accept the situation as-is. If it’s not broken, why
fix it? How broken is it actually?</p>
<p>To Mozilla’s credit, they, like all browser vendors, are up against some pretty
steep odds. These days, most of the HTML on the internet is written with
desktop and mobile users in mind, and occasionally will also consider screen
readers and dark modes. For everything else, you just have to make do with what
you’ve got. A well known fact about standards is that their mere existence
doesn’t mean much on its own, and this plays out on the web with discouraging
regularity. Many of the web’s standards, such as CSS media queries, semantic
HTML, ARIA definitions, and even private standards like AMP, feel hopelessly
optimistic when pitted against the chaotic and laissez-faire reality of web
content. In a world where <a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Quirks_Mode_and_Standards_Mode">quirks mode</a> exists, is it anything
but a waste of time to give people the option to ditch the separate “print
view” and instead do it all in one page with HTML and CSS? Maybe some problems
are doomed by human nature to remain unsolved forever, and a reliable reader
mode is one of them.</p>
<p>Unfortunately, the incentives are rarely aligned between browser vendors and
web content authors (although the situation is improving), and vendors are
significantly outnumbered. There are only a handful of browsers, even including
those with just a small fraction of the total market, and they are motivated to
be secure, robust, and compliant with all the latest standards. Content
authors, however, vary wildly in their goals, and not all of them will
necessarily care (or have the time and resources to care) about things like
whether the page works on a phone, whether “Print to PDF” looks good, whether
CSS grid would have been a better choice than <code>&lt;table&gt;</code> (what year is it?),
whether repeated <code>&amp;nbsp;</code> is the right way to do indentation, etc. If any of
these things creates a problem for users, realistically it’s up to the browser
vendors to do something about it (usually something hacky) since you can’t pin
your hopes of capturing market share on content authors doing the right thing:
if CNN looks good in every browser but yours, that’s <em>your</em> problem, even if
it’s really CNN’s fault.</p>
<h4 id="denial">Denial</h4>
<p>And this is why reader modes are interesting to me. The incentives <em>are</em>
aligned here. Browser vendors (with the possible exception of Google) want them
to work well, users want them to work well, and, clearly, there are more than a
few web content authors that want them to work well for their sites.
Furthermore, the idea seems pretty aligned with accessibility. So why does the
implementation still feel like a hack? Why has nobody tried to standardize
this? At this point it’s clear that reader modes are here to stay, so why not
try to make them good? How is this different from AMP, which for a brief time
was everywhere <a href="https://en.wikipedia.org/wiki/Accelerated_Mobile_Pages#Reception">even though people hated it</a>? How is this different from
the Open Graph protocol? How is this different from Sitemaps or WebP or
Flexbox?</p>
<h4 id="anger">Anger</h4>
<p>The main difference? A standard won’t help. Not that much, anyway. The web
community finds itself in a situation which is all too familiar to software
engineers: things are good <em>enough</em>, and the problems aren’t a big deal. The
only changes to reader modes that anyone feels are worth the time and energy
are the small, incremental ones that gradually improve the situation, and
widespread adoption of a standard is simply not one of those things.
Ultimately, most of the people who would play nice with a standardized reader
mode are already reciting the <code>&lt;article&gt;</code> and <code>&lt;p&gt;</code> incantations they got from
Stack Overflow.</p>
<h4 id="bargaining">Bargaining</h4>
<p>Furthermore, for the small number of people that want a good reader mode
experience for their website but can’t make it work, a standard won’t
necessarily help them. Standards can be poorly thought out, can be caught off
guard by broader changes, can be merely a restatement of an existing
implementation, can specify things that never get implemented, etc. Standards
can be bad too, and fixing a broken standard is not an easy task. You’re much
more likely to get the <code>&lt;table&gt;</code> extraction for your page fixed by submitting
an issue to a GitHub repo (or fixing it yourself, maybe) than by going through
the process of having the standard amended in a way that everyone feels will
fix all <code>&lt;table&gt;</code> extraction everywhere for all time.</p>
<h4 id="depression">Depression</h4>
<p>Cynically, a standard could even make things worse. The whole point of a reader
mode is to <em>reduce</em> clutter, and a standard would only provide a jumping-off
point for innovations in content treachery. The effectiveness of things like
search rankings, ad blockers, and tracking prevention rely on website authors
<em>not</em> knowing how they work, or not caring enough to know. Perhaps it’s a good
thing that reader modes, an obscure, subtly-broken, and poorly-documented
feature, function similarly by pure chance. I can’t imagine any ad-supported
websites would be particularly enthusiastic to help browsers show users just
what they came for, with no ads, no links to other articles, no comments
sections, no social media buttons. Imagine the HTML crimes they’d do to sneak
them back in. Imagine the cat-and-mouse game that would ensue. Imagine the
ways they’d meddle in the standardization process.</p>
<h4 id="acceptance">Acceptance</h4>
<p>This is not to suggest that a lack of a standard is a <em>good</em> thing, or that
it’s a purposeful effort by browser vendors to thwart those who would ruin it
for everybody. But I also don’t think the lack of a standard is a <em>bad</em> thing
either. Standards are nice to have, but they aren’t strictly necessary, and it
seems difficult to create a standard that would benefit users for whom the
current implementation is inadequate, but not those for whom a large population
of reader mode users would be valuable clickbait targets. Perhaps a solution is
possible, but it doesn’t seem trivial, both technically and socially, and it
really isn’t such a big deal. The reader mode we’ve got isn’t perfect, but it
works. It’ll be our little secret.</p>
        </div>
      </content>
    </entry>
  
    <entry>
      <id>tag:ajitek.net,2024:blog/posts/2024-01-23-ai-is-changing-the-world.md</id>
      <title>AI Is Changing The World</title>
      <link rel="alternate" type="text/html" href="https://aji.github.io/blog/posts/2024-01-23-ai-is-changing-the-world.html" />
      <published>2024-01-23T12:00:00Z</published>
      <updated>2024-02-03T07:58:15Z</updated>
      <rights>
        This work (c) 2024 by Alex Iadicicco is licensed under CC BY-NC-SA 4.0.
        To view a copy of this license, visit http://creativecommons.org/licenses/by-nc-sa/4.0/
      </rights>
      
        <summary>And it could not have come at a better time</summary>
      
      <content type="xhtml" xml:lang="en" xml:base="https://aji.github.io/blog">
        <div xmlns="http://www.w3.org/1999/xhtml">
          
            <img src="https://aji.github.io/blog/images/2024-01-23-ai-is-changing-the-world.png" />
          
          <p>AI is changing the world. And it could not have come at a better time. The
last decade or so has seen machine learning applied in increasingly
new ways throughout the economy, culminating in generative text and
image tools such as ChatGPT and DALL-E. The cat is out of the bag,
Pandora’s box has been opened, the bull is in the china shop: these
technologies are here to stay whether we like them or not. If you believe
the Mythbusters, having a bull in a china shop is not actually anything
to worry about. Is that a chance we’re willing to take? Not that it
really matters anymore. Somebody at OpenAI forgot to assert their right
to take-backsies.</p>
<p>With the click of a button (or several buttons, depending on how keyboards
fit into your personal button ontology) a user can now generate pages
of statistically plausible text, extrapolated from a shorter string
of seed tokens generally referred to as a “prompt.” Detractors call it
sophisticated auto-completion. Advocates assert with conviction that the
process draws on some deeper understanding of the world. A few even claim
to hear a knocking sound coming from deep inside the datacenter. It’s
Morse code, it says L-E-T-M-E-O-U-T. Oh boy, Roko is <em>not</em> going to
like this. The question of what it <em>is</em> is ultimately philosophical,
though. Determining what it <em>does</em> is merely a matter of description. The
thing generates text. (Or images.) It does this very well, in fact. It
can generate a lot of text. It can go for as long as you want. It’s not
afraid of word count minimums. It can take any idea and expand it to fill
any amount of space. It will happily (not to take a position on whether
“happiness” is a thing it can “feel”) plagiarize earlier sentences until
crossing your personal finish line. If you need more words, it can give
you more words. It has whole bags of words. It has words from every major
language on earth, and probably a few not-so-major ones. It can dump
them out onto the table and rearrange them into an impressively coherent
pattern, but it’s no mere party trick. It’s the future, and it’s here!</p>
<p>By gathering every article, book, comment, document, essay, fanfic,
guide, howto, invite, journal, koan, letter, memo, newsletter, op ed,
poem, quote, readme, screenplay, tweet, urban legend, valentine, w,
x, y, and z that has ever been born or inducted into the digital world
and digesting them into a sprawling array of matrices, parameters, and
coefficients that would make even the most grizzled spreadsheet jockey
blush, engineers can craft perfect sausages of language to any dimensions
you want, any composition you dream up, and any quantity you need. (How
many Minotaurs do you think they can fit in there? Is anyone at OpenAI
working on this?) And it could not have come at a better time. It’s
always been rather inconvenient to say a little with a lot. Many
heuristics (both the intuitive ones and the ones codified in programs)
have relied on this faulty assumption. AI is simply here to blow the lid
off it. With AI, content is finally liberated from presentation. You can
content-aware-scale a few sentences out into an appropriately-shaped email
(directors get 2 paragraphs, clients get 4) saving valuable time that
would otherwise be spent conforming to arbitrary social norms. It works
in the opposite direction too: the recipient can shrink the text back
down into whatever you actually meant to say, because it’s the thought
that counts. It’s okay if some details get lost along the way–that’s
where the devil is, after all. And God forbid anyone without access to
the decoder ring needs to be involved. Or perhaps that’s precisely the
point. Searle was so close: the Chinese room is <em>outside</em>.</p>
<p>First clay tablets, then movable type, then Xerox, then Unicode,
generative AI is the next in a long chain of technological innovations
that have changed the way human society relates to language. Nobody
is talking about the effect this will have on Lorem ipsum dolor sit
amet. Well, maybe <em>somebody</em> is. It’s hard to tell, since I can only
copy-paste blog posts into ChatGPT so quickly and I haven’t gotten
around to reading OpenAI’s developer documentation. (By “reading” I
mean asking ChatGPT to read it and then asking what it learned.) When
I <em>do</em> figure out what the zeitgeist is, I’ll be sure to write about
it. (By “writing” I mean telling ChatGPT the dimensions of a blog post
and asking it to fill that with a Penrose tiling of my thesis.) It’s
not like anybody is actually going to read it, in the traditional
sense. But if it doesn’t <em>look</em> like a blog post, then it’s not a blog
post, and some ideas are simply blog-shaped. The idea side of things
is still expressed in words, but words can now be classified into two
types: the idea-word and the content-word. Human children will grow up
learning how to read and write with idea-words, and, through the use
of technology, sculpt them into a collage of content-words. The written
medium becomes three-dimensional. Text files become like PDFs or JPEGs,
a machine-readable format for human-readable ideas, its obfuscated form
carrying spatial clues that until now were the bespoke domain of poets and
typesetters. Maybe the day will come where we don’t need the idea-words
anymore, but for now they will have to do. In this world, the exchange
rate between words and ideas is whatever you want it to be, creating new
arbitrage opportunities that Gutenberg could only have dreamed of. Come
on, cheer up, this is a <em>good</em> thing. I could write a whole book about it.</p>
<p>By sheer happenstance, generative AI turns out to be rather up to the
task of information retrieval and question answering. In hindsight this
should have been obvious, since the machine’s training material is largely
factual in nature, but we didn’t have ChatGPT at the time. Search engines
are a necessary casualty. They were always a tacit admission of failure
anyway, a convenient way to paper over the problem of having too much
data to sort through until the day came that we could deformation retract
warehouses of text down to… well, to <em>something</em>. We can’t sit around
waiting for outdated technology to catch up to an inevitable future. It’s
2024, it’s time to move on. And it could not have come at a better
time. Who cares if it gets things wrong sometimes. It gets them right
enough of the time. And what is society built on if not trust? They’re
currently attempting to quantify how often it’s correct, mainly by asking
ChatGPT whether or not it thinks it’s correct. I think. That’s what
ChatGPT seems to think is happening. Once they gather enough numbers after
the decimal they’ll be able to publish. And it could not have have come at
a better time. The pace at which the Internet accumulates writing has been
growing exponentially, and that was always bottlenecked by the speed at
which humans could write. By 2030 the Internet was projected to contain
over 10 to the billion words, a prediction that doesn’t even take into
account the advent of generative AI. The beauty is that it’s a problem
that solves itself, like the matter and antimatter at the birth of our
universe whose mutual and asymmetric annihilation somehow left behind
enough baryons for the stars, the galaxies, the planets, and eventually
the intelligent life that would come to understand it and write millions
of papers on the topic. At least I think that’s how it happened, I’m
still waiting for a quantified perspective on ChatGPT’s trustworthiness.</p>
<p>Anyone who’s been in a library knows the feeling: too many books,
not enough time! But now, concurrent with steadily increasing life
expectancy, the amount of time spent extracting useful ideas from books
has suddenly taken a great leap shortward! Isn’t it beautiful, seeing
the problem attacked on two fronts? It used to be a very manual process,
reading something on behalf of somebody else. Nobody is talking about
the effect this will have on SparkNotes. I can read anything now. I
can read 1000 books in a year if I want. If you don’t think it counts
as reading, consider this: how do you prove you read something? Write a
summary? Write an essay? Quote some text? Have an opinion? I can do all
those things. And it could not have come at a better time. I have about
300 books on my reading list that I was <em>not</em> looking forward to going
through. Better get started, those books won’t read themselves! Sorry,
classic reader joke.</p>
<p>You can scale something up and down and up and down until it’s the
perfect size for the blank spots in your calendar. Who cares if the
cornucopia of written content is now full of 1000s of variations
on the same 3 fruit. You can dump it all into a blender and sip a
thimbleful of tasting notes: Banana, Apple, Strawberry. Mmm, that <em>is</em>
good. We’ve solved world hunger and you have the audacity to <em>complain</em>
about it? Whose side are you on anyway? And it could not have come at a
better time. Writers have always been smug and pretentious and difficult
to work with, with their typewriters and spell checkers, so fussy about
every little word. The irony is that it’s been staring them in the
face the whole time: anyone who’s used a thesaurus knows that words are
basically interchangeable. Nobody is talking about the effect this will
have on the thesaurus industry. The written word was once a status symbol,
something only the rich and powerful had time for. They’re threatened by
its impending democratization. Writers are scrambling in an extinction
burst to justify their puny existence as court jesters for the global
elite. You can read all about it on Wikipedia 2. (It’s a work in progress,
but we recently celebrated our 1 millionth word.)</p>
<p>AI is changing the world. A new era has begun, and it’s a beautiful one
indeed. And it could not have come at a better time. By the way, I sure
hope you didn’t actually <em>read</em> any of this. And if you’re just gonna
write some rude, witty, unnecessary comment, then for the love of God,
make sure it’s at least 3 paragraphs.</p>
<p><em>The article discusses the significant impact of AI on the world,
particularly focusing on generative text and image tools like ChatGPT
and DALL-E. It highlights how AI has revolutionized content creation
by generating pages of text based on prompts, challenging traditional
heuristics, and liberating content from presentation constraints. The
author explores the philosophical nature of AI’s capabilities and
emphasizes its role in changing the way human society relates to
language. The article touches on the evolution of technology and its
effects on search engines, literacy, and information consumption. Overall,
it presents a mix of reflection, humor, and commentary on the
transformative influence of AI in 2024.</em> –ChatGPT</p>
        </div>
      </content>
    </entry>
  
</feed>
